#!/bin/sh

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –¥–ª—è Django
if [ "$SERVICE_NAME" = "django" ]; then
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    while ! nc -z "$DB_HOST" "$DB_PORT"; do
        sleep 1
    done
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞!"

    echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    python manage.py migrate

    echo "üì¶ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    python manage.py collectstatic --noinput

    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ..."
    PRODUCTS_COUNT=$(python manage.py shell <<EOF
from products.models import Product
print(Product.objects.count())
EOF
    )

    if [ "$PRODUCTS_COUNT" -eq 0 ]; then
        echo "üîÑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏..."
        python manage.py populate_products
    else
        echo "‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ"
    fi

    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    SUPERUSER_EXISTS=$(python manage.py shell <<EOF
from django.contrib.auth import get_user_model
User = get_user_model()
exists = User.objects.filter(username="$DJANGO_SUPERUSER_USERNAME").exists()
print("EXISTS" if exists else "MISSING")
EOF
    )

    echo "–≠–∫–∑–µ–º–ø–ª—è—Ä —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $SUPERUSER_EXISTS"

    if [ "$SUPERUSER_EXISTS" = "MISSING" ]; then
        echo "üÜï –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $DJANGO_SUPERUSER_USERNAME..."
        python manage.py createsuperuser --username "$DJANGO_SUPERUSER_USERNAME" --email "$DJANGO_SUPERUSER_EMAIL" --noinput
    fi
fi

# –ó–∞–ø—É—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
case "$SERVICE_NAME" in
    "django")
        echo "üöÄ –ó–∞–ø—É—Å–∫ Gunicorn..."
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        if [ "$ENVIRONMENT" = "development" ]; then
            echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
            watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3 --chdir /app &
        else
            echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."
            gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3 --chdir /app &
        fi
        echo "üöÄ –ó–∞–ø—É—Å–∫ Nginx..."
        nginx -g 'daemon off;'
        ;;
    "celery")
        echo "üöÄ –ó–∞–ø—É—Å–∫ Celery Worker..."
        celery -A backend worker --loglevel=info
        ;;
    "celery-beat")
        echo "üöÄ –ó–∞–ø—É—Å–∫ Celery Beat..."
        celery -A backend beat --loglevel=info
        ;;
    *)
        echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $SERVICE_NAME"
        exit 1
        ;;
esac